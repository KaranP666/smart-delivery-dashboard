// schema.prisma
// Learn more: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model DeliveryPartner {
  id               String     @id @default(uuid())
  name             String
  email            String     @unique
  phone            String
  status           PartnerStatus
  currentLoad      Int
  areas            String[]
  shiftStart       String     // HH:mm format
  shiftEnd         String     // HH:mm format
  rating           Float
  completedOrders  Int
  cancelledOrders  Int
  assignments      Assignment[]
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
}

model Order {
  id              String     @id @default(uuid())
  orderNumber     String     @unique
  customerName    String
  customerPhone   String
  customerAddress String
  area            String
  status          OrderStatus
  scheduledFor    String     // HH:mm format
  totalAmount     Float
  assignedTo      String?    // DeliveryPartner ID (nullable)
  assignment      Assignment?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

model Assignment {
  id        String           @id @default(uuid())
  orderId   String           @unique   // ðŸ”§ Added unique constraint
  partnerId String
  timestamp DateTime         @default(now())
  status    AssignmentStatus
  reason    String?

  order     Order            @relation(fields: [orderId], references: [id])
  partner   DeliveryPartner  @relation(fields: [partnerId], references: [id])
}
enum PartnerStatus {
  active
  inactive
}

enum OrderStatus {
  pending
  assigned
  picked
  delivered
}

enum AssignmentStatus {
  success
  failed
}
